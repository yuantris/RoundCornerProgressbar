apply plugin: 'maven-publish'

// 添加版本控制开关
ext.isRelease = project.hasProperty('release')

// 动态版本号配置
def version_number = '1.0.0'
def version_number_snapshot = isRelease ? version_number : "${version_number}-SNAPSHOT"

/**
 * # Mac给 gradlew 添加执行权限（在项目根目录执行）
 chmod +x gradlew
 *
 * # 清除缓存并刷新依赖
 ./gradlew clean build --refresh-dependencies
 * # 清除指定模块的缓存（示例路径）
 rm -rf ~/.gradle/caches/modules-2/files-2.1/io.core/fylibs/
 * # 查看指定依赖
 ./gradlew :app:dependencyInsight --dependency androidx.viewpager2:viewpager2 --configuration zytestDebugRuntimeClasspath

 * # 发布快照版本（默认）
 ./gradlew publishSnapshot

 # 发布正式版本
 ./gradlew publishRelease -Prelease
 */

afterEvaluate {
    publishing {
        publications {
            plugin(MavenPublication) {
                from components.release
                groupId = 'io.core.widget'
                artifactId = 'progressbar'
                // 动态设置版本号
                version = isRelease ? version_number : version_number_snapshot
            }
        }
        repositories {
            maven {
                url = isRelease ?
                        'https://packages.aliyun.com/maven/repository/2512815-release-NDmHZu/' :
                        'https://packages.aliyun.com/maven/repository/2512815-snapshot-TM86u0/'
                credentials {
                    username = '63d4d579378edb0fd9aa3b2d'
                    password = 'nXJxEWiiObre'
                }
            }
            mavenLocal()
        }
    }
}

// 添加快捷任务别名
tasks.register('publishSnapshot') {
    dependsOn 'publish'
    doFirst {
        println "正在发布SNAPSHOT版本: ${version_number_snapshot}"
    }
}

tasks.register('publishRelease') {
    dependsOn 'publish'
    doFirst {
        println "正在发布RELEASE版本: ${version_number}"
    }
}

tasks.register('publishLocal') {
    dependsOn 'publishToMavenLocal'
    doFirst {
        println "正在发布到MavenLocal: ${version_number_snapshot}"
    }
}

